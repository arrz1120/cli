const path = require('path')
const inquirer = require('inquirer')
const fs = require('fs-extra')
const downloadGit = require('download-git-repo')
const del = require('del')

const tmpls = [
  {
    text: '移动端( webpack )',
    abbr: 'mobile( webpack )',
    repo: 'PhoonLee/env-mobile-webpack',
  },
  {
    text: '移动端( vue )',
    abbr: 'mobile( vue )',
    repo: 'PhoonLee/env-mobile-vue',
  }
]
let project = {
  repo: '',
  tmpl: '',
  dir: ''
}

const projectNameList = {
  type: 'input',
  name: 'projectName',
  message: '项目名称:',
  validate: async function(input) {
    if (input === '') {
      return '项目名不能为空'
    }
    return true
  }
}

const rawlist = {
  type: 'rawlist',
  name: 'projectTemp',
  message: '选择构建模板:',
  choices: tmpls.map(item => {
    return {
      name: item.text,
      value: item.abbr,
      short: item.repo
    }
  }),
}

inputProjectName()

function inputProjectName() {
  inquirer.prompt(projectNameList).then(({projectName}) => {
    const projectDir = path.resolve(process.cwd(), projectName)
  
    fs.pathExists(projectDir).then(exists => {
      if(exists){
        console.log('项目已存在，请重新输入项目名') 
        inputProjectName()
      }else{
        project.dir = projectDir
        chooseProject()
      }
    }) 
  })
}

function chooseProject() {
  inquirer.prompt([rawlist]).then(answer=>{
    const choice=tmpls.find(item=>{
      return item.abbr===answer.projectTemp
    })
    project.repo=choice.repo
    project.tmpl=choice.abbr
    console.log('')
    console.log('----- 下载中 -----')
    downloadGit(`${project.repo}`,`${project.dir}`,async err=>{
      if(err){
        console.log(err)
        process.exit()
      }
      console.log('----- 下载完毕 -----')
      console.log('')
      const removeGlob=path.resolve(project.dir,'./**/.gitkeep')
      try{
        await del(removeGlob)
        console.log('----- 启动步骤 ( cwd = projectDir ) -----')
        console.log(`1) 安装 npm 包: npm i 或 cnpm i`)
        console.log(`2) 启动开发环境: npm run dev`)
        console.log(`3) 打包项目: npm run build`)      

      }catch(err){
        console.log(err)
        process.exit()
      }
    })
  })
  .catch(err=>{
    console.log(err)
    process.exit()
  })
}

  